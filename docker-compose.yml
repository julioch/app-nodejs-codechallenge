version: "3.7"

services:
  postgres:
    image: postgres:14
    container_name: transaction-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactions
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transaction-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: transaction-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transaction-network
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: transaction-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
      KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS: 30000
      KAFKA_JMX_PORT: 9991
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_NUM_NETWORK_THREADS: 3
      KAFKA_NUM_IO_THREADS: 8
    ports:
      - "9092:9092" 
      - "29092:29092"
      - "9991:9991"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - transaction-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 10

  transaction-service:
    build: .
    container_name: transaction-app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: transactions
      KAFKA_BROKER: "kafka:29092" 
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    networks:
      - transaction-network
    restart: unless-stopped

volumes:
  postgres_data:
  kafka_data:

networks:
  transaction-network:
    driver: bridge